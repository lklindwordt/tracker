(($, window, document) ->
  Object::reverseMerge = (source) ->
    for key of source
      if !(key of this)
        this[key] = source[key]
    this

  # Helper!
  searchToParam = (str) ->
    obj = {}
    parts = str.split '&'
    for part in parts
      kv = part.split '='
      [key, value] = kv
      obj[key] = value

    obj

  scriptQuery = (identifier) ->
    scripts = document.getElementsByTagName('script')
    for script in scripts
      if script.src.match identifier
        return searchToParam (script.src.match(/\?.*/) || [undefined])[0];
    ""

  # configuration
  projectDefaults =
    host: 'http://tracker.dev' # TODO should be dynamic per deployment!

  #
  class Project
    constructor: (options = {}) ->

  loaderDefaults =
    key: "value"

  #
  class Loader
    constructor:  (options) ->
      @_options = $.extend {}, loaderDefaults, options

      @_project = null

      @init()

    init: ->
      @initializeProject()
      console.log @_options
      console.log @_project

    projectOptions: ->
      @_options.project || { id: 'foo' }

    initializeProject: ->
      @_project ?= new Project @projectOptions()

  $ ->
    loader = new Loader scriptQuery("client.js")
)(jQuery, window, document)